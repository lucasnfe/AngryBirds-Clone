using UnityEngine;
using System;
using System.Collections.Generic;
/** \class  ABLevelGenerator
 *  \brief  Inherits LevelSource, abstract class containing methods to generate Angry Birds Levels
 *
 *  Contains abstract method to generate levels, calculates LevelLimit, 
 *  Calculates Next Level, add component objects to game level.
 */
public abstract class ABLevelGenerator : LevelSource {
	
    /**Abstract method for generating level (may be random or by GA)*/
	public abstract ABLevel GenerateLevel();
    
    /**
     *  Returns the limit of the level, in this case, the biggest integer possible
     *  @return int biggest integer
     */
	public override int LevelLimit() {

		unchecked {
			return (int)Mathf.Infinity;
		}
	}

    /**
     *  Calls Next Level from base and return one created by the GenerateLevel() method
     *  @return ABLevel Next Level to be used
     */
	public override ABLevel NextLevel()
	{
		base.NextLevel();

		return GenerateLevel();
	}

    /**
     *  Generates a new ABLevel object and adds to it the birds amount and all the game objects for the level
     *  Along with their positions and labels
     *  @param[in]  gameObjs  array containing all the game objects for the desired level
     *  @return ABLevel Level generated by the ABLevel constructor and containing all objects from the received array
     */
	public static ABLevel GameObjectsToABLevel(GameObject []gameObjs)
	{
		ABLevel level = new ABLevel();

		for(int i = 0; i < gameObjs.Length; i++)
		{
			if(gameObjs[i].tag == "Bird")
			{
				level.birdsAmount++;
			}
			else
			{
				ABGameObject abGameObj = new ABGameObject();
				abGameObj.Position = gameObjs[i].transform.position;
				abGameObj.Label = GameWorld.Instance.GetTemplateIndex(gameObjs[i]);
				level.gameObjects.Add(abGameObj);
			}
		}

		return level;
	}
}
